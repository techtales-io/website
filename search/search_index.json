{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#usage","title":"Usage","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"Abc","text":"<p>Hi, I'm the techtales blog about bla. blabla siehst du mich ?</p>"},{"location":"home_automation/node_red/redis_basics/","title":"How to store and retrieve states with REDIS key value store","text":""},{"location":"home_automation/node_red/redis_basics/#how-to-store-and-retrieve-states-with-redis-key-value-store","title":"How to store and retrieve states with REDIS key value store","text":"<p>When using <code>node-red</code> in a kubernetes cluster, there is no warranty, that the <code>node-red</code> pod lives forever. Based on this constraint, it is not a good idea to store states inside a <code>flow</code>. In this tutorial I will show you, how you can store \"states\" in a REDIS key value store.</p>"},{"location":"home_automation/node_red/redis_basics/#story","title":"Story","text":"<p>If a given window contact sensor is open for longer then 15 minutes I want to receive a notification in discord, to remind me on closing the window.</p> <ul> <li>The reminder should only be send once, not multiple times.</li> <li>Restarting of node-red should have no impact.</li> </ul>"},{"location":"home_automation/node_red/redis_basics/#software-used","title":"Software used","text":"<ul> <li>node-red (3.0.2)</li> <li>REDIS (7.0.5)</li> </ul>"},{"location":"home_automation/node_red/redis_basics/#connectivity-test","title":"Connectivity test","text":"<p>Lets say we have both running and we are able to connect from node-red (pod/container/...) to redis, this can be tested by getting shell access and running the following command, where <code>redis.database.svc.cluster.local</code> is the redis IP and <code>6379</code> is the port.</p> <pre><code>nc redis.database.svc.cluster.local 6379\n</code></pre> <p>By typing:</p> <pre><code>PING\n</code></pre> <p>we should get the response:</p> <pre><code>+PONG\n</code></pre> <p>\ud83c\udf89 We are half the way, communication is working!</p>"},{"location":"home_automation/node_red/redis_basics/#installing-node-red-contrib-redis","title":"Installing node-red-contrib-redis","text":"<p>node-red-contrib-redis adds the redis nodes to node-red. By hitting <code>alt</code>+<code>shift</code>+<code>p</code> in <code>node-red</code> we can open the <code>Pallete</code> view, clicking the <code>Install</code> tab and enering <code>node-red-contrib-redis</code> into the search, shows up a few options. Clicking on <code>install</code> near the package description will install the package and the new nodes should show up on the left side (node area).</p> <p></p>"},{"location":"home_automation/node_red/redis_basics/#configuring-redis-instance-in-node-red","title":"Configuring REDIS instance in node-red","text":"<p>We need to point <code>node-red</code> to our <code>REDIS</code> instance. The node-red package we just installed uses the ioredis library for the communication with REDIS.</p> <p></p> <p>For a single REDIS instance you can go with the following, where <code>redis.database.svc.cluster.local</code> is the IP:</p> <pre><code>{\n\"host\": \"redis.database.svc.cluster.local\",\n\"port\": 6379\n}\n</code></pre> <p>When using a REDIS cluster with sentinel, like I do, you can use something similar to this:</p> <pre><code>{\n\"sentinels\": [\n{\n\"host\": \"redis.database.svc.cluster.local\",\n\"port\":26379\n}\n],\n\"name\":\"redis-master\"\n}\n</code></pre> <p></p> <p>For further options please read up the ioredis documentation.</p> <p>Bellow the instance node, a green square indicator should show up together with <code>ready</code> wording, to indicate that your configuration is working as intended.</p> <p></p>  \u26a0\ufe0f Please keep in mind that if you use sentinel, you are not able to write into most of your nodes. A non sentinel configuration will work and show green light but you will not print or log any errors showing that you try to write into a read-only instance!"},{"location":"home_automation/node_red/redis_basics/#modelling-the-problem","title":"Modelling the Problem","text":""},{"location":"home_automation/node_red/redis_basics/#inputs","title":"Inputs","text":"<p>We have an input that will be <code>on</code> or <code>off</code> (can be boolean aswel). This input indicates if our window is open or closed, and will switch whenever the state change.</p>"},{"location":"home_automation/node_red/redis_basics/#conditions","title":"Conditions","text":"<ul> <li>If our input switches to <code>on</code> we need to store the <code>timestamp</code> to later calculate if this <code>timestamp</code> is &gt; 15 minutes away from <code>now</code>. We need to assure if event is fired more then 1 time, that we dont overwrite our first <code>timestamp</code>.</li> <li>If our input switches to <code>off</code> we can delete our state as everything is invalidated.</li> <li>While state is <code>on</code> we need to test continously if the time delta between event start and <code>now</code> is &gt; 15 minutes.</li> <li>If our time delta between <code>timestamp</code> and <code>now</code> is &gt; 15 minutes we need to call the discord webhook.</li> <li>Whille state is <code>on</code>, time delta &gt; 15 minutes and discord webhook has been triggered nothing should happen.</li> </ul>"},{"location":"home_automation/node_red/redis_basics/#solution","title":"Solution","text":""},{"location":"home_automation/node_red/redis_basics/#store-timestamp-with-redis-setnx","title":"Store timestamp with REDIS SETNX","text":"<p>To only write if we dont have a value stored on this key (this is how we prevent overwrite if set), REDIS offers the command SETNX. This is how we achieve the prevent overwrite if <code>on</code> event is fired more then once (f.e. when pod is restarted).</p>"},{"location":"home_automation/node_red/redis_basics/#delete-redis-key-on-off","title":"Delete REDIS key on <code>off</code>","text":"<p>If event <code>off</code> is triggered we just delete the key in REDIS with the DEL command. This is how we can assure then on the next <code>on</code> event everything is starting from the begining.</p>"},{"location":"home_automation/node_red/redis_basics/#continously-test-stored-value","title":"Continously test stored value","text":"<p>With an <code>inject node</code> running in a loop (f.e. 15 seconds) we can retrieve the REDIS key with the GET command. As GET will return <code>null</code> if not set, we need to test for null with a <code>switch node</code> afterwards we transform our REDIS value to a JSON object. Now we can test with another <code>switch node</code> if the value of discord is <code>false</code>, if so we calculate the time delta between <code>timestamp</code> and <code>now</code>. With a third <code>switch node</code> we can test if the durration is &gt; 15 minutes. If so, we can send the webhook. But we need to store the information that we have send the webhook with a REDIS SET this time, as we want to override the previous value.</p>"},{"location":"home_automation/node_red/redis_basics/#implementation","title":"Implementation","text":"<p>\ud83d\udcc2 flow.json (discord webhook has been redacted \ud83d\ude1b)</p>"},{"location":"home_automation/node_red/redis_basics/#limitation","title":"Limitation","text":"<p>We have 1 race condition left, if the REDIS key is deleted just before the last SET. In this case we will have no event send to discord when opening the window again. As the chance is pretty low to hit it, I will leave it out for now, but something to improve in the future.</p> <p>Do you know how to solve it? Do you have some idea on how to improve? feel free to send me your feedback!</p>"},{"location":"user_guide/styling/","title":"styling stuff","text":""},{"location":"user_guide/writing/","title":"writing stuff","text":""}]}